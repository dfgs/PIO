
{{- -}}

// <auto-generated/>
using System;
using System.Collections.Generic;
using PIO.Models;

namespace {{class.namespace}}
{
	public partial class {{class.name}} : IDataProvider
	{
		{{- for dataSourceClass in project.classes}}

		{{- dtoAttribute = dataSourceClass.attributes | find "DTOAttribute"  }}
		{{- if !dtoAttribute}}
		{{- continue }}
		{{- end}}
		{{- dataSourceName = (dtoAttribute.parameters | find "Name").value}}

		{{- primaryKey=dataSourceClass.properties | with_attribute "PrimaryKey" | array.first }}
		{{- if !primaryKey}}
		{{- continue }}
		{{- end}}

		public IEnumerable<{{dataSourceName}}> Get{{dataSourceName}}()
		{
			return database.{{dataSourceName}}Table;
		}
		#nullable enable
		public {{dataSourceName}}? Get{{dataSourceName}}({{primaryKey.type_name}} {{primaryKey.name}})
		{
			return database.{{dataSourceName}}Table.FirstOrDefault(item => item.{{primaryKey.name}} == {{primaryKey.name}});
		}
		#nullable disable
		public {{dataSourceName}} Post{{dataSourceName}}({{dataSourceName}} {{dataSourceName}})
		{
			{{dataSourceName}}.{{primaryKey.name}} = database.{{dataSourceName}}Table.Max(item => item.{{primaryKey.name}})+1;
			database.{{dataSourceName}}Table.Add({{dataSourceName}});
			return {{dataSourceName}};
		}
		#nullable enable
		public {{dataSourceName}}? Put{{dataSourceName}}({{dataSourceName}} {{dataSourceName}})
		{
			int index;
			index = database.{{dataSourceName}}Table.FirstIndex(item => item.{{primaryKey.name}} == {{dataSourceName}}.{{primaryKey.name}});
			if (index==-1) return null;
			database.{{dataSourceName}}Table[index] = {{dataSourceName}};
			return {{dataSourceName}};
		}
		#nullable disable
		{{- end }}
		

	}
}
